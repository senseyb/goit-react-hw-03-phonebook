{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Contacts.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Contacts.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","evt","setState","target","value","onSubmit","preventDefault","props","handleSubmit","className","styles","form","this","title","onChange","type","pattern","required","btn","Component","Filter","filter","block","htmlFor","id","input","ContactsListItem","item","handleDelete","textContent","onClick","ContactsList","items","ul","map","Contacts","prevState","term","some","alert","newTodo","uuid","localStorage","getItem","parsedItems","JSON","parse","setItem","stringify","formattedFilter","toLowerCase","trim","filteredItems","includes","titleContact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2268ee0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1XQX7\",\"title\":\"ContactForm_title__2WjTz\",\"btn\":\"ContactForm_btn__3utj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Filter_block__1hfR6\",\"title\":\"Filter_title__3P9Hn\",\"input\":\"Filter_input__L_9bs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Contacts_block__398oO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactListItem_btn__3NpRp\",\"textContent\":\"ContactListItem_textContent__3uCa6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__2s6pt\"};","import React, { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    // id: uuid(),\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (evt) => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  };\n\n  onSubmit = (evt) => {\n    evt.preventDefault();\n\n    this.props.handleSubmit(this.state);\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className={styles.form} onSubmit={this.onSubmit}>\n          <span className={styles.title}>Name</span>\n          <input\n            onChange={this.handleChange}\n            value={this.state.name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n          <span className={styles.title}>Number</span>\n          <input\n            name=\"number\"\n            type=\"tel\"\n            onChange={this.handleChange}\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n          <button className={styles.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ handleChange, filter }) => {\n  return (\n    <div className={styles.block}>\n      <label className={styles.title} htmlFor=\"filter\">Find contacts by name:</label>\n      <input\n        id=\"filter\"\n        name=\"filter\"\n        type=\"text\"\n        className={styles.input}\n        onChange={handleChange}\n        value={filter}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactListItem.module.css\";\nconst ContactsListItem = ({ item, handleDelete}) => {\n  const { name, number } = item;\n\n  return (\n    <p>\n      <div className={styles.textContent}>\n        <span>\n          {name}: {number}\n        </span>\n        <button className={styles.btn} onClick={handleDelete}>Delete</button>\n      </div>\n    </p>\n  );\n};\n\nContactsListItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsListItem;\n","import PropTypes from \"prop-types\";\nimport ContactsListItem from \"../ContactListItem/ContactListItem\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactsList = ({ items, handleDelete }) => {\n  return (\n    <div>\n      <ul className={styles.ul}>\n        {items.map((item) => (\n          <ContactsListItem\n            key={item.id}\n            item={item}\n            handleDelete={() => handleDelete(item.id)}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactsList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string.isRequired }))\n    .isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport Filter from \"./Filter/Filter\";\nimport ContactsList from \"./ContactList/ContactList\";\nimport styles from \"./Contacts.module.css\";\n\n\nclass Contacts extends Component {\n  state = {\n    items: [{id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const items = localStorage.getItem(\"items\");\n    if (items) {\n      const parsedItems = JSON.parse(items);\n      this.setState({ items: parsedItems });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.items !== this.state.items) {\n      localStorage.setItem(\"items\", JSON.stringify(this.state.items));\n    }\n  }\n\n\n  handleDelete = (id) => {\n    this.setState((prevState) => ({\n      items: prevState.items.filter((item) => item.id !== id),\n    }));\n  };\n\n  handleChange = (evt) => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  };\n\n  handleSubmit = (term) => {\n   \n    const isDuplicate = this.state.items.some(\n      (item) => item.name === term.name\n    );\n    if (isDuplicate) {\n      alert(`Контакт: ` + term.name + ` уже существует `);\n      return;\n    }\n\n    const newTodo = {\n      id: uuid(),\n      name: term.name,\n      number: term.number,\n    };\n\n    this.setState((prevState) => {\n      const newItems = [newTodo, ...prevState.items];\n      return { items: newItems };\n    });\n  };\n\n  render() {\n    const { items, filter } = this.state;\n    const formattedFilter = filter.toLowerCase().trim();\n    const filteredItems = items.filter((item) =>\n      item.name.toLowerCase().includes(formattedFilter)\n    );\n\n    return (\n      <div className=\"container\">\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm handleSubmit={this.handleSubmit} />\n        <h2 className={styles.titleContact}>Contacts</h2>\n        <div className={styles.block}>\n          <Filter filter={filter} handleChange={this.handleChange} />\n          <ContactsList\n            items={filteredItems}\n            handleDelete={this.handleDelete}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport Contacts from \"./components/Contacts\";\n\n\nconst App = () => {\n  return (\n    <div className=\"toDoList\">\n      <Contacts />\n    </div>\n  );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}